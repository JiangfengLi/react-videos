{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetails.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","key","id","videoId","VideoDetail","videoSrc","description","KEY","App","selectedVideo","onTermSubmit","a","youtube","get","params","q","part","maxResults","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"0PAkCeA,E,4MA/BXC,MAAQ,CAAEC,KAAM,I,EAEhBC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAGvCC,aAAe,SAAAJ,GACXA,EAAMK,iBAGN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,uDAInC,OACI,yBAAKS,UAAU,yBACX,0BAAMC,SAAUC,KAAKL,aAAcG,UAAU,WACzC,yBAAKA,UAAU,SACX,+CACA,2BACIG,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKV,uB,GAvBnBa,IAAMC,W,QCAfC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,0CCgBIC,G,MAhBG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxB,OACI,yBAAKC,QAAS,kBAAMD,EAAcD,IAAQX,UAAU,mBAChD,yBACIc,IAAKH,EAAMI,QAAQC,MACnBhB,UAAU,WACViB,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MAEzC,yBAAKpB,UAAU,WACX,yBAAKA,UAAU,UAAUW,EAAMI,QAAQC,WCKxCK,EAdG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQV,EAAmB,EAAnBA,cACnBW,EAAeD,EAAOE,KAAI,SAACb,GAC7B,OACI,kBAAC,EAAD,CACIc,IAAKd,EAAMe,GAAGC,QACdf,cAAeA,EACfD,MAAOA,OAKnB,OAAO,yBAAKX,UAAU,2BAA2BuB,ICStCK,EArBK,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MACnB,IAAIA,EACA,OAAO,2CAGX,IAAMkB,EAAQ,wCAAoClB,EAAMe,GAAGC,SAE3D,OACI,6BACI,yBAAK3B,UAAU,YACX,4BAAQgB,MAAM,eAAeC,IAAKY,KAEtC,yBAAK7B,UAAU,cACX,wBAAIA,UAAU,aAAaW,EAAMI,QAAQC,OAC7C,2BAAIL,EAAMI,QAAQe,gBCVxBC,EAAM,0CAsDGC,E,4MAnDX1C,MAAQ,CAAEgC,OAAQ,GAAIW,cAAe,M,EAMrCC,a,uCAAe,WAAO3C,GAAP,eAAA4C,EAAA,sEAEYC,EAAQC,IAAI,UAAW,CAC1CC,OAAQ,CACJC,EAAGhD,EACHiD,KAAM,UACNrC,KAAM,QACNsC,WAAY,EACZhB,IAAKM,KARF,OAELW,EAFK,OAYX,EAAKhD,SAAS,CACV4B,OAAQoB,EAASC,KAAKC,MACtBX,cAAeS,EAASC,KAAKC,MAAM,KAd5B,2C,wDAmBfhC,cAAgB,SAACD,GACb,EAAKjB,SAAS,CAAEuC,cAAetB,K,kEAvB/BT,KAAKgC,aAAa,Y,+BA2BlB,OACI,yBAAKlC,UAAU,gBACX,kBAAC,EAAD,CAAWH,aAAcK,KAAKgC,eAC9B,yBAAKlC,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,sBACX,kBAAC,EAAD,CAAaW,MAAOT,KAAKZ,MAAM2C,iBAEnC,yBAAKjC,UAAU,oBACX,kBAAC,EAAD,CACIY,cAAeV,KAAKU,cACpBU,OAAQpB,KAAKZ,MAAMgC,iB,GA1CjCjB,IAAMC,WCJxBuC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.0a9b1252.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component{\r\n    state = { term: '' };\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ term: event.target.value });\r\n    };\r\n\r\n    onFormSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        // TODO: Make sure we call callback from parent component\r\n        this.props.onFormSubmit(this.state.term);\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"search-bar ui segment\">\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>Video Search</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            value={this.state.term}\r\n                            onChange={this.onInputChange}    \r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import axios from \"axios\";\r\n \r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\"\r\n});\r\n\r\n//youtube.get('/search')","import './VideoItem.css';\r\nimport React from 'react';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n    return (\r\n        <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n            <img \r\n                alt={video.snippet.title} \r\n                className=\"ui image\" \r\n                src={video.snippet.thumbnails.medium.url} \r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"header\">{video.snippet.title}</div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) =>{\r\n    const renderedList = videos.map((video) => {\r\n        return (\r\n            <VideoItem \r\n                key={video.id.videoId} \r\n                onVideoSelect={onVideoSelect} \r\n                video={video} \r\n            />\r\n        );\r\n    })\r\n\r\n    return <div className=\"ui relaxed divided lsit\">{renderedList}</div>;\r\n};\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n    if(!video){\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe title=\"video player\" src={videoSrc} />\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n            <p>{video.snippet.description}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport youtube from '../apis/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetails';\r\n\r\nconst KEY = 'AIzaSyAKNqBzbp41f5tQ3EIygogwBaMJyNd16o4';\r\n\r\nclass App extends React.Component{\r\n    state = { videos: [], selectedVideo: null };\r\n\r\n    componentDidMount(){\r\n        this.onTermSubmit('videos');\r\n    }\r\n\r\n    onTermSubmit = async (term) => {\r\n        //console.log(term);\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                q: term,\r\n                part: 'snippet',\r\n                type: 'video',\r\n                maxResults: 5,\r\n                key: KEY\r\n            }\r\n        });\r\n\r\n        this.setState({ \r\n            videos: response.data.items,\r\n            selectedVideo: response.data.items[0]\r\n        });\r\n\r\n    };\r\n\r\n    onVideoSelect = (video) => {\r\n        this.setState({ selectedVideo: video });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"ui container\">\r\n                <SearchBar onFormSubmit={this.onTermSubmit} />\r\n                <div className=\"ui grid\">\r\n                    <div className=\"ui row\">\r\n                        <div className=\"eleven wide column\">\r\n                            <VideoDetail video={this.state.selectedVideo} />\r\n                        </div>\r\n                        <div className=\"five wide column\">\r\n                            <VideoList \r\n                                onVideoSelect={this.onVideoSelect} \r\n                                videos={this.state.videos} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );           \r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}